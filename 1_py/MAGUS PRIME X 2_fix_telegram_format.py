import logging
import os

import requests
from dotenv import load_dotenv

# Configure logging
logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# Load environment variables
load_dotenv()


def escape_html(text):
    """Escape HTML special characters"""
    return str(text).replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")


def test_send_telegram_message(message):
    """Test sending a message to Telegram with proper HTML escaping"""
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")

    if not bot_token or not chat_id:
        logger.error("Missing Telegram credentials in environment variables")
        return None

    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": message,
        "parse_mode": "HTML",  # Using HTML for formatting
    }

    try:
        logger.info("Sending test message to Telegram")
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status()

        logger.info("Message sent successfully!")
        return response.json()
    except Exception as e:
        logger.error(f"Failed to send message: {e}")
        if hasattr(e, "response") and e.response is not None:
            logger.error(f"Response: {e.response.text}")
        return None


def send_test_signal():
    """Send a test signal with proper HTML formatting"""
    # Example signal parameters
    pair = "BTC/USD"
    entry = 72500
    stop_loss = 71000
    tp1 = 74000
    tp2 = 75000
    tp3 = 76000
    timeframe = "4h"
    signal_type = "Breakout <Test>"  # Intentionally using characters that need escaping

    # Build message with proper escaping
    message = f"""
ðŸš¨ <b>TRADING SIGNAL</b> ðŸš¨

ðŸ”¹ <b>Pair:</b> {escape_html(pair)}
ðŸ”¹ <b>Type:</b> {escape_html(signal_type)}
ðŸ”¹ <b>Timeframe:</b> {escape_html(timeframe)}
ðŸ”¹ <b>Platform:</b> Capital.com

ðŸ’° <b>Entry:</b> {escape_html(entry)}
ðŸ›‘ <b>Stop Loss:</b> {escape_html(stop_loss)}
âœ… <b>TP1:</b> {escape_html(tp1)}
âœ… <b>TP2:</b> {escape_html(tp2)}
âœ… <b>TP3:</b> {escape_html(tp3)}

Generated by MAGUS PRIME X
"""

    # Send the test message
    result = test_send_telegram_message(message)

    if result and result.get("ok"):
        logger.info("Test signal sent successfully")
    else:
        logger.error("Failed to send test signal")


if __name__ == "__main__":
    logger.info("Testing Telegram message formatting")
    send_test_signal()
    print("\nCheck your Telegram for the test message.")
